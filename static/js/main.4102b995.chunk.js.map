{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["countCenter","a","b","bigger","Math","max","lower","min","App","query","URLSearchParams","window","location","search","center","get","split","zoom","calculatedZoom","courier","client","centerRoad","zoomRoad","mappedCenter","latitude","longtitude","mappedZoom","mappedCourier","mappedClient","a1","b1","a2","b2","diffA","diffB","r","getZoom","console","log","className","MapContainer","style","width","height","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4102b995.chunk.js","sourcesContent":["import \"./App.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet\";\n\nexport interface Position {\n  latitude: number;\n  longtitude: number;\n}\n\nconst countCenter = (a: number, b: number): number => {\n  const bigger = Math.max(a, b);\n  const lower = Math.min(a, b);\n  if (bigger === lower) return 0;\n  const distance = (bigger - lower) / 2;\n  return lower + distance;\n};\n\nconst getZoom = (a1: number, b1: number, a2: number, b2: number): number => {\n  const diffA = Math.max(a1, a2) - Math.min(a1, a2);\n  const diffB = Math.max(b1, b2) - Math.min(b1, b2);\n  const r = Math.max(diffA, diffB);\n  if (r <= 0.003) return 18;\n  if (r <= 0.006) return 17;\n  if (r <= 0.011) return 16;\n  if (r <= 0.025) return 15;\n  if (r <= 0.041) return 14;\n  if (r <= 0.06) return 13;\n  if (r <= 0.12) return 12;\n  if (r <= 0.26) return 11;\n  if (r <= 0.6) return 10;\n  if (r <= 1.3) return 9;\n  if (r <= 4.5) return 7;\n  if (r <= 10) return 6;\n  if (r <= 18) return 5;\n  if (r <= 26) return 4;\n  return 1;\n};\n\nfunction App() {\n  // localhost:3000?center=50.049683,19.944544&zoom=13&courier=50.0717929,19.9304276&client=50.1006913,19.8827967&centerRoad=true\n  // localhost:3000?center=50.049683,19.944544&zoom=13&courier=50.008,20.013&client=50,20&centerRoad=true&zoomRoad=true\n\n  const query = new URLSearchParams(window.location.search);\n\n  const center: string[] | undefined = query.get(\"center\")?.split(\",\");\n  const zoom: string | null = query.get(\"zoom\");\n  let calculatedZoom: number | null = null;\n  const courier: string[] | undefined = query.get(\"courier\")?.split(\",\");\n  const client: string[] | undefined = query.get(\"client\")?.split(\",\");\n  const centerRoad: string | null = query.get(\"centerRoad\");\n  const zoomRoad: string | null = query.get(\"zoomRoad\");\n\n  let mappedCenter: Position = center\n    ? { latitude: +center[0], longtitude: +center[1] }\n    : { latitude: 50.049683, longtitude: 19.944544 };\n  const mappedZoom: number = zoom ? +zoom : 13;\n  const mappedCourier: Position | null = courier\n    ? { latitude: +courier[0], longtitude: +courier[1] }\n    : null;\n  const mappedClient: Position | null = client\n    ? { latitude: +client[0], longtitude: +client[1] }\n    : null;\n\n  if (centerRoad === \"true\" && mappedCourier && mappedClient) {\n    mappedCenter = {\n      latitude: countCenter(\n        mappedCourier.latitude as number,\n        mappedClient.latitude as number\n      ),\n      longtitude: countCenter(\n        mappedCourier.longtitude as number,\n        mappedClient.longtitude as number\n      ),\n    };\n  }\n\n  if (zoomRoad === \"true\" && mappedCourier && mappedClient) {\n    calculatedZoom = getZoom(\n      mappedCourier.latitude,\n      mappedCourier.longtitude,\n      mappedClient.latitude,\n      mappedClient.longtitude\n    );\n  }\n\n  console.log(mappedCenter);\n  console.log(mappedZoom);\n  console.log(mappedCourier);\n  console.log(client);\n\n  console.log(\n    `%c${(mappedCourier as any)?.latitude - (mappedClient as any)?.latitude}`,\n    \"color: red\"\n  );\n  console.log(\n    `%c${\n      (mappedCourier as any)?.longtitude - (mappedClient as any)?.longtitude\n    }`,\n    \"color: green\"\n  );\n\n  return (\n    <div className=\"App\">\n      <MapContainer\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        center={[mappedCenter.latitude, mappedCenter.longtitude]}\n        zoom={calculatedZoom ? calculatedZoom : mappedZoom}\n        scrollWheelZoom={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {mappedCourier ? (\n          <Marker position={[mappedCourier.latitude, mappedCourier.longtitude]}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        ) : null}\n        {mappedClient ? (\n          <Marker position={[mappedClient.latitude, mappedClient.longtitude]}>\n            <Popup>\n              A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n          </Marker>\n        ) : null}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}